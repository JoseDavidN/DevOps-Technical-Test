name: Pipeline CI/CD
description: |
    Este flujo de trabajo de GitHub Actions se encarga de compilar una aplicación Java utilizando Maven y luego construir y subir una imagen Docker a Docker Hub.
    Se ejecuta en cada push o pull request a la rama principal.
    Usa variables de entorno llamadas DOCKERHUB_USERNAME y DOCKERHUB_TOKEN en los secretos del repositorio para subir la imagen docker a Docker Hub.
    También se usa un archivo Dockerfile en la raíz del repositorio para construir la imagen Docker.
    El flujo de trabajo se divide en dos trabajos: uno para la construcción de la aplicación Java y otro para la construcción y subida de la imagen Docker.
    El primer trabajo compila la aplicación y sube el artefacto JAR, mientras que la segunda trabajo descarga el artefacto, construye la imagen Docker y la sube a Docker Hub.

on:
    push:
        branches: ['main']
    pull_request:
        branches: ['main']

permissions:
    contents: read

env:
    IMAGE_NAME: jose-gomez:v1.0
    REGISTRY: docker.io
    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
    build-java:
        name: Construccion de la Aplicación Java
        runs-on: ubuntu-latest

        steps:
            - name: Descargar el código
              uses: actions/checkout@v4

            - name: Configurar JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: '17'
                  distribution: 'temurin'
            
            - name: Cachear dependencias de Maven
              uses: actions/cache@v4
              with:
                path: ~/.m2/repository
                key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
                restore-keys: ${{ runner.os }}-maven-

            - name: Ejecutar pruebas unitarias
              run: mvn test

            - name: Compilar y empaquetar la aplicación
              run: mvn clean package

            - name: Publicar artefacto JAR
              uses: actions/upload-artifact@v4
              with:
                  name: aplicacion-java
                  path: target/*.jar

    docker-image:
        name: Compilacion y publicacion de la imagen Docker
        needs: build-java
        runs-on: ubuntu-latest

        steps:
            - name: Descargar el código
              uses: actions/checkout@v4

            - name: Descargar artefacto JAR
              uses: actions/download-artifact@v4
              with:
                  name: aplicacion-java
                  path: target

            - name: Configurar Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Iniciar sesion en Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ env.DOCKERHUB_USERNAME }}
                  password: ${{ env.DOCKERHUB_TOKEN }}

            - name: Construir imagen Docker
              run: |
                docker build \
                    --build-arg APP_VERSION=${{ env.IMAGE_VERSION }} \
                    --build-arg GIT_COMMIT=${{ github.sha }} \
                    --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
                    -t ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }} .

            - name: Subir imagen Docker a Docker Hub
              run: |
                docker push ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
